// <auto-generated />
using System;
using HekaMiniumApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HekaMiniumApi.Migrations
{
    [DbContext(typeof(HekaMiniumSchema))]
    [Migration("20221003065556_StaffPermitModelMig")]
    partial class StaffPermitModelMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HekaMiniumApi.Context.AddressInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("DoorNo")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<string>("Gsm")
                        .HasColumnType("text");

                    b.Property<string>("OpenAddress")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("AddressInfo");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandCode")
                        .HasColumnType("text");

                    b.Property<string>("BrandName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("RecordIcon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.BrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer");

                    b.Property<string>("BrandModelCode")
                        .HasColumnType("text");

                    b.Property<string>("BrandModelName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("BrandModel");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Firm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("CommercialTitle")
                        .HasColumnType("text");

                    b.Property<string>("EInvoiceEndpoint")
                        .HasColumnType("text");

                    b.Property<string>("EInvoiceLogin")
                        .HasColumnType("text");

                    b.Property<string>("EInvoicePassword")
                        .HasColumnType("text");

                    b.Property<string>("EWaybillEndpoint")
                        .HasColumnType("text");

                    b.Property<string>("EWaybillLogin")
                        .HasColumnType("text");

                    b.Property<string>("EWaybillPassword")
                        .HasColumnType("text");

                    b.Property<int?>("FirmCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("FirmCode")
                        .HasColumnType("text");

                    b.Property<string>("FirmName")
                        .HasColumnType("text");

                    b.Property<int>("FirmType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsEInvoice")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsEWaybill")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("TaxNo")
                        .HasColumnType("text");

                    b.Property<string>("TaxOffice")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressInfoId");

                    b.HasIndex("FirmCategoryId");

                    b.HasIndex("PlantId");

                    b.ToTable("Firm");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.FirmAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .HasColumnType("text");

                    b.Property<string>("AuthorSurname")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("FirmId")
                        .HasColumnType("integer");

                    b.Property<string>("Gsm")
                        .HasColumnType("text");

                    b.Property<int?>("OrderInFirm")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FirmId");

                    b.ToTable("FirmAuthor");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.FirmCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirmCategoryCode")
                        .HasColumnType("text");

                    b.Property<string>("FirmCategoryName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("FirmCategory");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Forex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ForexCode")
                        .HasColumnType("text");

                    b.Property<string>("ForexName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("LiveRate")
                        .HasColumnType("numeric");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("Forex");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int?>("BrandModelId")
                        .HasColumnType("integer");

                    b.Property<int?>("DefaultTaxRate")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RecordIcon")
                        .HasColumnType("text");

                    b.Property<string>("SerialNo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("BrandModelId");

                    b.HasIndex("ItemCategoryId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("PlantId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ItemCategoryCode")
                        .HasColumnType("text");

                    b.Property<string>("ItemCategoryName")
                        .HasColumnType("text");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("RecordIcon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("ItemCategory");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemDemand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeadlineDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DemandStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<bool?>("IsContracted")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsOrdered")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("text");

                    b.Property<int?>("SysUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SysUserId");

                    b.ToTable("ItemDemand");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemDemandConsume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ConsumeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ItemDemandDetailId")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemOrderDetailId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ItemDemandDetailId");

                    b.HasIndex("ItemOrderDetailId");

                    b.ToTable("ItemDemandConsume");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemDemandDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DemandStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<bool?>("IsContracted")
                        .HasColumnType("boolean");

                    b.Property<int?>("ItemDemandId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemExplanation")
                        .HasColumnType("text");

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("integer");

                    b.Property<decimal?>("NetQuantity")
                        .HasColumnType("numeric");

                    b.Property<string>("PartDimensions")
                        .HasColumnType("text");

                    b.Property<string>("PartNo")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemDemandId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UnitId");

                    b.ToTable("ItemDemandDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemGroupCode")
                        .HasColumnType("text");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("text");

                    b.Property<int?>("OrderInCategory")
                        .HasColumnType("integer");

                    b.Property<string>("RecordIcon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemCategoryId");

                    b.ToTable("ItemGroup");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<int?>("FirmId")
                        .HasColumnType("integer");

                    b.Property<int?>("OfferStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("OfferType")
                        .HasColumnType("integer");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("text");

                    b.Property<int?>("SysUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FirmId");

                    b.HasIndex("PlantId");

                    b.HasIndex("SysUserId");

                    b.ToTable("ItemOffer");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOfferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AcceptedFirmId")
                        .HasColumnType("integer");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<string>("ItemExplanation")
                        .HasColumnType("text");

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemOfferId")
                        .HasColumnType("integer");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("integer");

                    b.Property<decimal?>("NetQuantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("OfferStatus")
                        .HasColumnType("integer");

                    b.Property<string>("PartDimensions")
                        .HasColumnType("text");

                    b.Property<string>("PartNo")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedFirmId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemOfferId");

                    b.HasIndex("UnitId");

                    b.ToTable("ItemOfferDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOfferDetailDemand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DemandOrder")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemDemandDetailId")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemOfferDetailId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ItemDemandDetailId");

                    b.HasIndex("ItemOfferDetailId");

                    b.ToTable("ItemOfferDetailDemand");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOfferFirmOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FirmId")
                        .HasColumnType("integer");

                    b.Property<int?>("FirmOrder")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemOfferId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FirmId");

                    b.HasIndex("ItemOfferId");

                    b.ToTable("ItemOfferFirmOption");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeadlineDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocumentNo")
                        .HasColumnType("text");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<int?>("FirmId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsContracted")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsWaybilled")
                        .HasColumnType("boolean");

                    b.Property<int?>("ItemDemandId")
                        .HasColumnType("integer");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("text");

                    b.Property<int?>("ReceiptStatus")
                        .HasColumnType("integer");

                    b.Property<int>("ReceiptType")
                        .HasColumnType("integer");

                    b.Property<int?>("SysUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FirmId");

                    b.HasIndex("ItemDemandId");

                    b.HasIndex("PlantId");

                    b.HasIndex("SysUserId");

                    b.ToTable("ItemOrder");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOrderConsume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ConsumeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("ConsumeNetQuantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("ConsumerItemReceiptDetailId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ContributeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("ContributeNetQuantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("ContributerItemReceiptDetailId")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemOrderDetailId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerItemReceiptDetailId");

                    b.HasIndex("ContributerItemReceiptDetailId");

                    b.HasIndex("ItemOrderDetailId");

                    b.ToTable("ItemOrderConsume");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AlternatingQuantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int?>("BrandModelId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscountRate")
                        .HasColumnType("numeric");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<decimal?>("ForexDiscountPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("ForexId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ForexOverallTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexSubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexTaxPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrossQuantity")
                        .HasColumnType("numeric");

                    b.Property<bool?>("IsContracted")
                        .HasColumnType("boolean");

                    b.Property<int?>("ItemDemandDetailId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemExplanation")
                        .HasColumnType("text");

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemOfferDetailId")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemOrderId")
                        .HasColumnType("integer");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("integer");

                    b.Property<decimal?>("NetQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OverallTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("PartDimensions")
                        .HasColumnType("text");

                    b.Property<string>("PartNo")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReceiptStatus")
                        .HasColumnType("integer");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<bool?>("TaxIncluded")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("TaxPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("TaxRate")
                        .HasColumnType("integer");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("UsedNetQuantity")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("BrandModelId");

                    b.HasIndex("ForexId");

                    b.HasIndex("ItemDemandDetailId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemOfferDetailId");

                    b.HasIndex("ItemOrderId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UnitId");

                    b.ToTable("ItemOrderDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentNo")
                        .HasColumnType("text");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<int?>("FirmId")
                        .HasColumnType("integer");

                    b.Property<int?>("InWarehouseId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsInvoiced")
                        .HasColumnType("boolean");

                    b.Property<int?>("OutWarehouseId")
                        .HasColumnType("integer");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("text");

                    b.Property<int?>("ReceiptStatus")
                        .HasColumnType("integer");

                    b.Property<int>("ReceiptType")
                        .HasColumnType("integer");

                    b.Property<int?>("SysUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FirmId");

                    b.HasIndex("InWarehouseId");

                    b.HasIndex("OutWarehouseId");

                    b.HasIndex("PlantId");

                    b.HasIndex("SysUserId");

                    b.ToTable("ItemReceipt");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemReceiptConsume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ConsumeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("ConsumeNetQuantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("ConsumedReceiptDetailId")
                        .HasColumnType("integer");

                    b.Property<int?>("ConsumerReceiptDetailId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConsumedReceiptDetailId");

                    b.HasIndex("ConsumerReceiptDetailId");

                    b.ToTable("ItemReceiptConsume");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemReceiptDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AlternatingQuantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int?>("BrandModelId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscountRate")
                        .HasColumnType("numeric");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<decimal?>("ForexDiscountPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("ForexId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ForexOverallTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexSubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexTaxPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrossQuantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int?>("ItemReceiptId")
                        .HasColumnType("integer");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("integer");

                    b.Property<decimal?>("NetQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OverallTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("PartDimensions")
                        .HasColumnType("text");

                    b.Property<string>("PartNo")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReceiptStatus")
                        .HasColumnType("integer");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<bool?>("TaxIncluded")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("TaxPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("TaxRate")
                        .HasColumnType("integer");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("UsedNetQuantity")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("BrandModelId");

                    b.HasIndex("ForexId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemReceiptId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UnitId");

                    b.ToTable("ItemReceiptDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Divider")
                        .HasColumnType("numeric");

                    b.Property<bool?>("IsDefaultUnit")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsMainUnit")
                        .HasColumnType("boolean");

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Multiplier")
                        .HasColumnType("numeric");

                    b.Property<int?>("OrderInItem")
                        .HasColumnType("integer");

                    b.Property<int?>("UnitTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("ItemUnit");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InventoryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MachineCode")
                        .HasColumnType("text");

                    b.Property<string>("MachineName")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ProductionLineId")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.HasIndex("ProductionLineId");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DiscountTotalPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("DocumentNo")
                        .HasColumnType("text");

                    b.Property<int?>("FirmId")
                        .HasColumnType("integer");

                    b.Property<int?>("ForexId")
                        .HasColumnType("integer");

                    b.Property<string>("OfferCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("OfferDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OfferStatus")
                        .HasColumnType("integer");

                    b.Property<int>("OfferType")
                        .HasColumnType("integer");

                    b.Property<decimal?>("OverallTotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("SubTotalPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TaxTotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("FirmId");

                    b.HasIndex("ForexId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PlantCode")
                        .HasColumnType("text");

                    b.Property<string>("PlantName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("EstimatedDuration")
                        .HasColumnType("numeric");

                    b.Property<int?>("ForexId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("ProcessCode")
                        .HasColumnType("text");

                    b.Property<string>("ProcessName")
                        .HasColumnType("text");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ForexId");

                    b.HasIndex("PlantId");

                    b.ToTable("Process");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProductionLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductionLineCode")
                        .HasColumnType("text");

                    b.Property<string>("ProductionLineName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("ProductionLine");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Budget")
                        .HasColumnType("numeric");

                    b.Property<string>("CriticalExplanation")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeadlineDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<int?>("FirmId")
                        .HasColumnType("integer");

                    b.Property<string>("FirmLocation")
                        .HasColumnType("text");

                    b.Property<int?>("ForexId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ForexRate")
                        .HasColumnType("numeric");

                    b.Property<string>("MeetingExplanation")
                        .HasColumnType("text");

                    b.Property<decimal?>("OfferForexPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OfferPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProfitRate")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectPhaseTemplateId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("ResponsibleInfo")
                        .HasColumnType("text");

                    b.Property<string>("ResponsiblePerson")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalForexCost")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("FirmId");

                    b.HasIndex("ForexId");

                    b.HasIndex("PlantId");

                    b.HasIndex("ProjectCategoryId");

                    b.HasIndex("ProjectPhaseTemplateId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectCategoryCode")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCategoryName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("ProjectCategory");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectCostItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CostName")
                        .HasColumnType("text");

                    b.Property<int>("CostStatus")
                        .HasColumnType("integer");

                    b.Property<int>("CostType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DiscountRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedForexOverallTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedForexRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedForexSubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedForexTaxTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedForexUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedOverallTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedSubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedTaxTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EstimatedUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<int?>("ForexId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ForexOverallTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexSubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexTaxTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForexUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("LineNumber")
                        .HasColumnType("integer");

                    b.Property<decimal?>("OverallTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("PartDimensions")
                        .HasColumnType("text");

                    b.Property<string>("PartNo")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("RealizedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<int?>("TaxRate")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TaxTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ForexId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectCostItem");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectFieldService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentNo")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ServiceDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ServiceStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("ServiceUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ServiceUserId");

                    b.ToTable("ProjectFieldService");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectFieldServiceAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("bytea");

                    b.Property<string>("FileExtension")
                        .HasColumnType("text");

                    b.Property<string>("FileHeader")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectFieldServiceDetailId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectFieldServiceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectFieldServiceDetailId");

                    b.HasIndex("ProjectFieldServiceId");

                    b.ToTable("ProjectFieldServiceAttachment");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectFieldServiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectFieldServiceId")
                        .HasColumnType("integer");

                    b.Property<int?>("ServiceStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WorkExplanation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectFieldServiceId");

                    b.ToTable("ProjectFieldServiceDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectPhase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<string>("PhaseColor")
                        .HasColumnType("text");

                    b.Property<int>("PhaseOrder")
                        .HasColumnType("integer");

                    b.Property<int?>("PhaseStatus")
                        .HasColumnType("integer");

                    b.Property<string>("PhaseTitle")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectPhase");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectPhaseTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PhaseTemplateCode")
                        .HasColumnType("text");

                    b.Property<string>("PhaseTemplateName")
                        .HasColumnType("text");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectCategoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.HasIndex("ProjectCategoryId");

                    b.ToTable("ProjectPhaseTemplate");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectPhaseTemplateDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<string>("PhaseColor")
                        .HasColumnType("text");

                    b.Property<int>("PhaseOrder")
                        .HasColumnType("integer");

                    b.Property<string>("PhaseTitle")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectPhaseTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectPhaseTemplateId");

                    b.ToTable("ProjectPhaseTemplateDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssigneeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EstimatedStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectPhaseId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TaskName")
                        .HasColumnType("text");

                    b.Property<int>("TaskStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("UserTeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectPhaseId");

                    b.HasIndex("UserTeamId");

                    b.ToTable("ProjectTask");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<int?>("ForexId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("RouteCode")
                        .HasColumnType("text");

                    b.Property<string>("RouteName")
                        .HasColumnType("text");

                    b.Property<decimal?>("RoutePrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ForexId");

                    b.HasIndex("PlantId");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.StaffPermit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PermitStatus")
                        .HasColumnType("integer");

                    b.Property<string>("StaffId")
                        .HasColumnType("text");

                    b.Property<string>("StaffPermitExplanation")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("StaffPermit");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.SysRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleAuthType")
                        .HasColumnType("integer");

                    b.Property<string>("RoleCode")
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("SysRole");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.SysRoleSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanRead")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanWrite")
                        .HasColumnType("boolean");

                    b.Property<string>("SectionKey")
                        .HasColumnType("text");

                    b.Property<int?>("SysRoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SysRoleId");

                    b.ToTable("SysRoleSection");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.SysUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DefaultLanguage")
                        .HasColumnType("text");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<int?>("SysRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("UserCode")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.HasIndex("SysRoleId");

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("UnitTypeCode")
                        .HasColumnType("text");

                    b.Property<string>("UnitTypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("UnitType");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.UserTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LeaderUserId")
                        .HasColumnType("integer");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("TeamName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LeaderUserId");

                    b.HasIndex("PlantId");

                    b.ToTable("UserTeam");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.UserTeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserTeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserTeamId");

                    b.ToTable("UserTeamMember");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AllowDelivery")
                        .HasColumnType("boolean");

                    b.Property<bool?>("AllowEntry")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("text");

                    b.Property<int>("WarehouseType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.AddressInfo", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Brand", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.BrandModel", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Firm", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.AddressInfo", "AddressInfo")
                        .WithMany()
                        .HasForeignKey("AddressInfoId");

                    b.HasOne("HekaMiniumApi.Context.FirmCategory", "FirmCategory")
                        .WithMany()
                        .HasForeignKey("FirmCategoryId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("AddressInfo");

                    b.Navigation("FirmCategory");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.FirmAuthor", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.Navigation("Firm");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.FirmCategory", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Forex", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Item", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("HekaMiniumApi.Context.BrandModel", "BrandModel")
                        .WithMany()
                        .HasForeignKey("BrandModelId");

                    b.HasOne("HekaMiniumApi.Context.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId");

                    b.HasOne("HekaMiniumApi.Context.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Brand");

                    b.Navigation("BrandModel");

                    b.Navigation("ItemCategory");

                    b.Navigation("ItemGroup");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemCategory", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemDemand", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("HekaMiniumApi.Context.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("HekaMiniumApi.Context.SysUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("SysUserId");

                    b.Navigation("Plant");

                    b.Navigation("Project");

                    b.Navigation("SysUser");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemDemandConsume", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ItemDemandDetail", "ItemDemandDetail")
                        .WithMany()
                        .HasForeignKey("ItemDemandDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HekaMiniumApi.Context.ItemOrderDetail", "ItemOrderDetail")
                        .WithMany()
                        .HasForeignKey("ItemOrderDetailId");

                    b.Navigation("ItemDemandDetail");

                    b.Navigation("ItemOrderDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemDemandDetail", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ItemDemand", "ItemDemand")
                        .WithMany()
                        .HasForeignKey("ItemDemandId");

                    b.HasOne("HekaMiniumApi.Context.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("HekaMiniumApi.Context.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Item");

                    b.Navigation("ItemDemand");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemGroup", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId");

                    b.Navigation("ItemCategory");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOffer", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("HekaMiniumApi.Context.SysUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("SysUserId");

                    b.Navigation("Firm");

                    b.Navigation("Plant");

                    b.Navigation("SysUser");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOfferDetail", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Firm", "AcceptedFirm")
                        .WithMany()
                        .HasForeignKey("AcceptedFirmId");

                    b.HasOne("HekaMiniumApi.Context.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("HekaMiniumApi.Context.ItemOffer", "ItemOffer")
                        .WithMany()
                        .HasForeignKey("ItemOfferId");

                    b.HasOne("HekaMiniumApi.Context.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("AcceptedFirm");

                    b.Navigation("Item");

                    b.Navigation("ItemOffer");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOfferDetailDemand", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ItemDemandDetail", "ItemDemandDetail")
                        .WithMany()
                        .HasForeignKey("ItemDemandDetailId");

                    b.HasOne("HekaMiniumApi.Context.ItemOfferDetail", "ItemOfferDetail")
                        .WithMany()
                        .HasForeignKey("ItemOfferDetailId");

                    b.Navigation("ItemDemandDetail");

                    b.Navigation("ItemOfferDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOfferFirmOption", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.HasOne("HekaMiniumApi.Context.ItemOffer", "ItemOffer")
                        .WithMany()
                        .HasForeignKey("ItemOfferId");

                    b.Navigation("Firm");

                    b.Navigation("ItemOffer");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOrder", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.HasOne("HekaMiniumApi.Context.ItemDemand", "ItemDemand")
                        .WithMany()
                        .HasForeignKey("ItemDemandId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("HekaMiniumApi.Context.SysUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("SysUserId");

                    b.Navigation("Firm");

                    b.Navigation("ItemDemand");

                    b.Navigation("Plant");

                    b.Navigation("SysUser");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOrderConsume", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ItemReceiptDetail", "ConsumerReceiptDetail")
                        .WithMany()
                        .HasForeignKey("ConsumerItemReceiptDetailId");

                    b.HasOne("HekaMiniumApi.Context.ItemReceiptDetail", "ContributerReceiptDetail")
                        .WithMany()
                        .HasForeignKey("ContributerItemReceiptDetailId");

                    b.HasOne("HekaMiniumApi.Context.ItemOrderDetail", "ItemOrderDetail")
                        .WithMany()
                        .HasForeignKey("ItemOrderDetailId");

                    b.Navigation("ConsumerReceiptDetail");

                    b.Navigation("ContributerReceiptDetail");

                    b.Navigation("ItemOrderDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemOrderDetail", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("HekaMiniumApi.Context.BrandModel", "BrandModel")
                        .WithMany()
                        .HasForeignKey("BrandModelId");

                    b.HasOne("HekaMiniumApi.Context.Forex", "Forex")
                        .WithMany()
                        .HasForeignKey("ForexId");

                    b.HasOne("HekaMiniumApi.Context.ItemDemandDetail", "ItemDemandDetail")
                        .WithMany()
                        .HasForeignKey("ItemDemandDetailId");

                    b.HasOne("HekaMiniumApi.Context.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("HekaMiniumApi.Context.ItemOfferDetail", "ItemOfferDetail")
                        .WithMany()
                        .HasForeignKey("ItemOfferDetailId");

                    b.HasOne("HekaMiniumApi.Context.ItemOrder", "ItemOrder")
                        .WithMany()
                        .HasForeignKey("ItemOrderId");

                    b.HasOne("HekaMiniumApi.Context.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("HekaMiniumApi.Context.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Brand");

                    b.Navigation("BrandModel");

                    b.Navigation("Forex");

                    b.Navigation("Item");

                    b.Navigation("ItemDemandDetail");

                    b.Navigation("ItemOfferDetail");

                    b.Navigation("ItemOrder");

                    b.Navigation("Project");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemReceipt", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.HasOne("HekaMiniumApi.Context.Warehouse", "InWarehouse")
                        .WithMany()
                        .HasForeignKey("InWarehouseId");

                    b.HasOne("HekaMiniumApi.Context.Warehouse", "OutWarehouse")
                        .WithMany()
                        .HasForeignKey("OutWarehouseId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("HekaMiniumApi.Context.SysUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("SysUserId");

                    b.Navigation("Firm");

                    b.Navigation("InWarehouse");

                    b.Navigation("OutWarehouse");

                    b.Navigation("Plant");

                    b.Navigation("SysUser");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemReceiptConsume", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ItemReceiptDetail", "ConsumedReceiptDetail")
                        .WithMany()
                        .HasForeignKey("ConsumedReceiptDetailId");

                    b.HasOne("HekaMiniumApi.Context.ItemReceiptDetail", "ConsumerReceiptDetail")
                        .WithMany()
                        .HasForeignKey("ConsumerReceiptDetailId");

                    b.Navigation("ConsumedReceiptDetail");

                    b.Navigation("ConsumerReceiptDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemReceiptDetail", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("HekaMiniumApi.Context.BrandModel", "BrandModel")
                        .WithMany()
                        .HasForeignKey("BrandModelId");

                    b.HasOne("HekaMiniumApi.Context.Forex", "Forex")
                        .WithMany()
                        .HasForeignKey("ForexId");

                    b.HasOne("HekaMiniumApi.Context.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("HekaMiniumApi.Context.ItemReceipt", "ItemReceipt")
                        .WithMany()
                        .HasForeignKey("ItemReceiptId");

                    b.HasOne("HekaMiniumApi.Context.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("HekaMiniumApi.Context.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Brand");

                    b.Navigation("BrandModel");

                    b.Navigation("Forex");

                    b.Navigation("Item");

                    b.Navigation("ItemReceipt");

                    b.Navigation("Project");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ItemUnit", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("HekaMiniumApi.Context.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId");

                    b.Navigation("Item");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Machine", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("HekaMiniumApi.Context.ProductionLine", "ProductionLine")
                        .WithMany()
                        .HasForeignKey("ProductionLineId");

                    b.Navigation("Plant");

                    b.Navigation("ProductionLine");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Offer", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.SysUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("HekaMiniumApi.Context.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.HasOne("HekaMiniumApi.Context.Forex", "Forex")
                        .WithMany()
                        .HasForeignKey("ForexId");

                    b.HasOne("HekaMiniumApi.Context.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("CreatedUser");

                    b.Navigation("Firm");

                    b.Navigation("Forex");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Process", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Forex", "Forex")
                        .WithMany()
                        .HasForeignKey("ForexId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Forex");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProductionLine", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Project", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.HasOne("HekaMiniumApi.Context.Forex", "Forex")
                        .WithMany()
                        .HasForeignKey("ForexId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("HekaMiniumApi.Context.ProjectCategory", "ProjectCategory")
                        .WithMany()
                        .HasForeignKey("ProjectCategoryId");

                    b.HasOne("HekaMiniumApi.Context.ProjectPhaseTemplate", "ProjectPhaseTemplate")
                        .WithMany()
                        .HasForeignKey("ProjectPhaseTemplateId");

                    b.Navigation("Firm");

                    b.Navigation("Forex");

                    b.Navigation("Plant");

                    b.Navigation("ProjectCategory");

                    b.Navigation("ProjectPhaseTemplate");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectCategory", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectCostItem", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.SysUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("HekaMiniumApi.Context.Forex", "Forex")
                        .WithMany()
                        .HasForeignKey("ForexId");

                    b.HasOne("HekaMiniumApi.Context.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("HekaMiniumApi.Context.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("CreatedUser");

                    b.Navigation("Forex");

                    b.Navigation("Item");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectFieldService", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("HekaMiniumApi.Context.SysUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("ServiceUserId");

                    b.Navigation("Project");

                    b.Navigation("SysUser");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectFieldServiceAttachment", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ProjectFieldServiceDetail", "ProjectFieldServiceDetail")
                        .WithMany()
                        .HasForeignKey("ProjectFieldServiceDetailId");

                    b.HasOne("HekaMiniumApi.Context.ProjectFieldService", "ProjectFieldService")
                        .WithMany()
                        .HasForeignKey("ProjectFieldServiceId");

                    b.Navigation("ProjectFieldService");

                    b.Navigation("ProjectFieldServiceDetail");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectFieldServiceDetail", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ProjectFieldService", "ProjectFieldService")
                        .WithMany()
                        .HasForeignKey("ProjectFieldServiceId");

                    b.Navigation("ProjectFieldService");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectPhase", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectPhaseTemplate", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("HekaMiniumApi.Context.ProjectCategory", "ProjectCategory")
                        .WithMany()
                        .HasForeignKey("ProjectCategoryId");

                    b.Navigation("Plant");

                    b.Navigation("ProjectCategory");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectPhaseTemplateDetail", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.ProjectPhaseTemplate", "ProjectPhaseTemplate")
                        .WithMany()
                        .HasForeignKey("ProjectPhaseTemplateId");

                    b.Navigation("ProjectPhaseTemplate");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.ProjectTask", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.SysUser", "AssigneeUser")
                        .WithMany()
                        .HasForeignKey("AssigneeId");

                    b.HasOne("HekaMiniumApi.Context.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("HekaMiniumApi.Context.ProjectPhase", "ProjectPhase")
                        .WithMany()
                        .HasForeignKey("ProjectPhaseId");

                    b.HasOne("HekaMiniumApi.Context.UserTeam", "UserTeam")
                        .WithMany()
                        .HasForeignKey("UserTeamId");

                    b.Navigation("AssigneeUser");

                    b.Navigation("Project");

                    b.Navigation("ProjectPhase");

                    b.Navigation("UserTeam");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Route", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Forex", "Forex")
                        .WithMany()
                        .HasForeignKey("ForexId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Forex");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.SysRole", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.SysRoleSection", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.SysRole", "SysRole")
                        .WithMany()
                        .HasForeignKey("SysRoleId");

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.SysUser", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("HekaMiniumApi.Context.SysRole", "SysRole")
                        .WithMany()
                        .HasForeignKey("SysRoleId");

                    b.Navigation("Plant");

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.UnitType", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.UserTeam", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.SysUser", "LeaderUser")
                        .WithMany()
                        .HasForeignKey("LeaderUserId");

                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("LeaderUser");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.UserTeamMember", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.SysUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("HekaMiniumApi.Context.UserTeam", "UserTeam")
                        .WithMany()
                        .HasForeignKey("UserTeamId");

                    b.Navigation("User");

                    b.Navigation("UserTeam");
                });

            modelBuilder.Entity("HekaMiniumApi.Context.Warehouse", b =>
                {
                    b.HasOne("HekaMiniumApi.Context.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.Navigation("Plant");
                });
#pragma warning restore 612, 618
        }
    }
}
